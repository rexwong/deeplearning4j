{
  "initialSchema" : {
    "Schema" : {
      "columns" : [ {
        "Categorical" : {
          "name" : "Cat",
          "stateNames" : [ "State1", "State2" ]
        }
      }, {
        "Categorical" : {
          "name" : "Cat2",
          "stateNames" : [ "State1", "State2" ]
        }
      }, {
        "Double" : {
          "name" : "Dbl",
          "allowNaN" : false,
          "allowInfinite" : false
        }
      }, {
        "Double" : {
          "name" : "Dbl2",
          "maxAllowedValue" : 100.0,
          "allowNaN" : true,
          "allowInfinite" : false
        }
      }, {
        "Integer" : {
          "name" : "Int"
        }
      }, {
        "Integer" : {
          "name" : "Int2",
          "minAllowedValue" : 0,
          "maxAllowedValue" : 10
        }
      }, {
        "Long" : {
          "name" : "Long"
        }
      }, {
        "Long" : {
          "name" : "Long2",
          "minAllowedValue" : -100
        }
      }, {
        "String" : {
          "name" : "Str"
        }
      }, {
        "String" : {
          "name" : "Str2",
          "regex" : "someregexhere",
          "minLength" : 1
        }
      }, {
        "String" : {
          "name" : "Str3"
        }
      }, {
        "Time" : {
          "name" : "TimeCol",
          "timeZone" : "UTC"
        }
      }, {
        "Time" : {
          "name" : "TimeCol2",
          "timeZone" : "UTC",
          "maxValidTime" : 1000
        }
      } ]
    }
  },
  "actionList" : [ {
    "transform" : {
      "CategoricalToIntegerTransform" : {
        "columnName" : "Cat"
      }
    }
  }, {
    "transform" : {
      "CategoricalToOneHotTransform" : {
        "columnName" : "Cat2"
      }
    }
  }, {
    "transform" : {
      "AppendStringColumnTransform" : {
        "columnName" : "Str3",
        "toAppend" : "ToAppend"
      }
    }
  }, {
    "transform" : {
      "IntegerToCategoricalTransform" : {
        "columnName" : "Cat",
        "map" : {
          "0" : "State1",
          "1" : "State2"
        }
      }
    }
  }, {
    "transform" : {
      "StringToCategoricalTransform" : {
        "columnName" : "Str",
        "stateNames" : [ "State1", "State2" ]
      }
    }
  }, {
    "transform" : {
      "DuplicateColumnsTransform" : {
        "columnsToDuplicate" : [ "Str" ],
        "newColumnNames" : [ "Str2a" ]
      }
    }
  }, {
    "transform" : {
      "RemoveColumnsTransform" : {
        "columnsToRemove" : [ "Str2a" ],
        "leftOverColumns" : [ "Cat", "Cat2[State1]", "Cat2[State2]", "Dbl", "Dbl2", "Int", "Int2", "Long", "Long2", "Str", "Str2", "Str3", "TimeCol", "TimeCol2" ]
      }
    }
  }, {
    "transform" : {
      "RenameColumnsTransform" : {
        "oldNames" : [ "Str2" ],
        "newNames" : [ "Str2a" ]
      }
    }
  }, {
    "transform" : {
      "ReorderColumnsTransform" : {
        "newOrder" : [ "Cat", "Dbl" ]
      }
    }
  }, {
    "transform" : {
      "ConditionalCopyValueTransform" : {
        "columnToReplace" : "Dbl",
        "sourceColumn" : "Dbl2",
        "condition" : {
          "DoubleColumnCondition" : {
            "columnName" : "Dbl",
            "op" : "Equal",
            "value" : 0.0
          }
        }
      }
    }
  }, {
    "transform" : {
      "ConditionalReplaceValueTransform" : {
        "columnToReplace" : "Dbl",
        "newValue" : {
          "DoubleWritable" : {
            "value" : 1.0
          }
        },
        "condition" : {
          "DoubleColumnCondition" : {
            "columnName" : "Dbl",
            "op" : "Equal",
            "value" : 1.0
          }
        }
      }
    }
  }, {
    "transform" : {
      "DoubleColumnsMathOpTransform" : {
        "newColumnName" : "NewDouble",
        "mathOp" : "Add",
        "columns" : [ "Dbl", "Dbl2" ]
      }
    }
  }, {
    "transform" : {
      "DoubleMathOpTransform" : {
        "columnName" : "Dbl",
        "mathOp" : "Add",
        "scalar" : 1.0
      }
    }
  }, {
    "transform" : {
      "IntegerColumnsMathOpTransform" : {
        "newColumnName" : "NewInt",
        "mathOp" : "Subtract",
        "columns" : [ "Int", "Int2" ]
      }
    }
  }, {
    "transform" : {
      "IntegerMathOpTransform" : {
        "columnName" : "Int",
        "mathOp" : "Multiply",
        "scalar" : 2
      }
    }
  }, {
    "transform" : {
      "ReplaceEmptyIntegerWithValueTransform" : {
        "columnName" : "Int",
        "value" : 1
      }
    }
  }, {
    "transform" : {
      "ReplaceInvalidWithIntegerTransform" : {
        "columnName" : "Int",
        "value" : 1
      }
    }
  }, {
    "transform" : {
      "LongColumnsMathOpTransform" : {
        "newColumnName" : "Long",
        "mathOp" : "Multiply",
        "columns" : [ "Long", "Long2" ]
      }
    }
  }, {
    "transform" : {
      "LongMathOpTransform" : {
        "columnName" : "Long",
        "mathOp" : "ScalarMax",
        "scalar" : 0
      }
    }
  }, {
    "transform" : {
      "MapAllStringsExceptListTransform" : {
        "columnName" : "Str",
        "newValue" : "Other",
        "exceptions" : [ "SomeVal", "Ok" ]
      }
    }
  }, {
    "transform" : {
      "RemoveWhiteSpaceTransform" : {
        "columnName" : "Str"
      }
    }
  }, {
    "transform" : {
      "ReplaceEmptyStringTransform" : {
        "columnName" : "Str",
        "value" : "WasEmpty"
      }
    }
  }, {
    "transform" : {
      "ReplaceStringTransform" : {
        "columnName" : "Str",
        "map" : {
          "anotherFrom" : "anotherTo",
          "from" : "to"
        }
      }
    }
  }, {
    "transform" : {
      "StringListToCategoricalSetTransform" : {
        "columnName" : "Str",
        "newColumnNames" : [ "StrA", "StrB" ],
        "categoryTokens" : [ "StrA", "StrB" ],
        "delimiter" : ","
      }
    }
  }, {
    "transform" : {
      "StringMapTransform" : {
        "columnName" : "Str2a",
        "map" : {
          "anotherFrom" : "anotherTo",
          "from" : "to"
        }
      }
    }
  }, {
    "transform" : {
      "DeriveColumnsFromTimeTransform" : {
        "columnName" : "TimeCol",
        "insertAfter" : "TimeCol",
        "inputTimeZone" : "UTC",
        "derivedColumns" : [ {
          "columnName" : "Hour",
          "columnType" : "Integer",
          "fieldType" : {
            "fieldType" : "hourOfDay"
          }
        }, {
          "columnName" : "Date",
          "columnType" : "String",
          "format" : "YYYY-MM-dd",
          "dateTimeZone" : "UTC"
        } ]
      }
    }
  }, {
    "transform" : {
      "StringToTimeTransform" : {
        "columnName" : "Str2a",
        "timeFormat" : "YYYY-MM-dd hh:mm:ss",
        "timeZone" : "UTC"
      }
    }
  }, {
    "transform" : {
      "TimeMathOpTransform" : {
        "columnName" : "TimeCol2",
        "mathOp" : "Add",
        "timeQuantity" : 1,
        "timeUnit" : "HOURS"
      }
    }
  }, {
    "filter" : {
      "FilterInvalidValues" : {
        "filterAnyInvalid" : false,
        "columnsToFilterIfInvalid" : [ "Cat", "Str2a" ]
      }
    }
  }, {
    "filter" : {
      "ConditionFilter" : {
        "condition" : {
          "NullWritableColumnCondition" : {
            "columnName" : "Long"
          }
        }
      }
    }
  }, {
    "convertToSequence" : {
      "singleStepSequencesMode" : false,
      "comparator" : {
        "NumericalColumnComparator" : {
          "columnName" : "TimeCol2",
          "ascending" : true
        }
      },
      "keyColumns" : [ "Int" ]
    }
  }, {
    "convertFromSequence" : { }
  }, {
    "convertToSequence" : {
      "singleStepSequencesMode" : false,
      "comparator" : {
        "StringComparator" : {
          "columnName" : "Str2a"
        }
      },
      "keyColumns" : [ "Int" ]
    }
  }, {
    "sequenceSplit" : {
      "SequenceSplitTimeSeparation" : {
        "timeColumn" : "TimeCol2",
        "timeQuantity" : 1,
        "timeUnit" : "HOURS"
      }
    }
  }, {
    "reducer" : {
      "Reducer" : {
        "keyColumns" : [ "TimeCol2" ],
        "defaultOp" : "TakeFirst",
        "opMap" : {
          "Cat" : [ "Count" ],
          "Dbl" : [ "Sum" ]
        },
        "customReductions" : { },
        "conditionalReductions" : { },
        "ignoreInvalidInColumns" : [ ]
      }
    }
  }, {
    "transform" : {
      "ReduceSequenceByWindowTransform" : {
        "reducer" : {
          "Reducer" : {
            "defaultOp" : "TakeFirst",
            "opMap" : {
              "Cat2" : [ "Count" ],
              "Dbl2" : [ "Stdev" ]
            },
            "customReductions" : { },
            "conditionalReductions" : { },
            "ignoreInvalidInColumns" : [ ]
          }
        },
        "windowFunction" : {
          "OverlappingTimeWindowFunction" : {
            "timeColumn" : "TimeCol2",
            "windowSize" : 1,
            "windowSizeUnit" : "HOURS",
            "windowSeparation" : 15,
            "windowSeparationUnit" : "MINUTES",
            "offsetUnit" : "MINUTES",
            "addWindowStartTimeColumn" : true,
            "addWindowEndTimeColumn" : true,
            "excludeEmptyWindows" : true,
            "offsetAmount" : 5
          }
        }
      }
    }
  }, {
    "convertFromSequence" : { }
  }, {
    "calculateSortedRank" : {
      "CalculateSortedRank" : {
        "newColumnName" : "rankColName",
        "sortOnColumn" : "TimeCol2",
        "comparator" : {
          "LongWritableComparator" : { }
        },
        "ascending" : true
      }
    }
  }, {
    "transform" : {
      "SequenceMovingWindowReduceTransform" : {
        "columnName" : "rankColName",
        "newColumnName" : "mean(20,rankColName)",
        "lookback" : 20,
        "op" : "Mean",
        "edgeCaseHandling" : "Default"
      }
    }
  }, {
    "transform" : {
      "AddConstantColumnTransform" : {
        "newColumnName" : "someIntColumn",
        "newColumnType" : "Integer",
        "fixedValue" : {
          "IntWritable" : {
            "value" : 0
          }
        },
        "inputSchema" : {
          "SequenceSchema" : {
            "columns" : [ {
              "Long" : {
                "name" : "takefirst(count(Cat))",
                "minAllowedValue" : 0
              }
            }, {
              "Double" : {
                "name" : "takefirst(sum(Dbl))",
                "allowNaN" : false,
                "allowInfinite" : false
              }
            }, {
              "Integer" : {
                "name" : "takefirst(takefirst(Cat2[State1]))",
                "minAllowedValue" : 0,
                "maxAllowedValue" : 1
              }
            }, {
              "Integer" : {
                "name" : "takefirst(takefirst(Cat2[State2]))",
                "minAllowedValue" : 0,
                "maxAllowedValue" : 1
              }
            }, {
              "Double" : {
                "name" : "takefirst(takefirst(Dbl2))",
                "maxAllowedValue" : 100.0,
                "allowNaN" : true,
                "allowInfinite" : false
              }
            }, {
              "Integer" : {
                "name" : "takefirst(takefirst(Int))"
              }
            }, {
              "Integer" : {
                "name" : "takefirst(takefirst(Int2))",
                "minAllowedValue" : 0,
                "maxAllowedValue" : 10
              }
            }, {
              "Long" : {
                "name" : "takefirst(takefirst(Long))"
              }
            }, {
              "Long" : {
                "name" : "takefirst(takefirst(Long2))",
                "minAllowedValue" : -100
              }
            }, {
              "Categorical" : {
                "name" : "takefirst(takefirst(StrA))",
                "stateNames" : [ "true", "false" ]
              }
            }, {
              "Categorical" : {
                "name" : "takefirst(takefirst(StrB))",
                "stateNames" : [ "true", "false" ]
              }
            }, {
              "Time" : {
                "name" : "takefirst(takefirst(Str2a))",
                "timeZone" : "UTC"
              }
            }, {
              "String" : {
                "name" : "takefirst(takefirst(Str3))"
              }
            }, {
              "Time" : {
                "name" : "takefirst(takefirst(TimeCol))",
                "timeZone" : "UTC"
              }
            }, {
              "Integer" : {
                "name" : "takefirst(takefirst(Hour))"
              }
            }, {
              "String" : {
                "name" : "takefirst(takefirst(Date))"
              }
            }, {
              "Time" : {
                "name" : "takefirst(TimeCol2)",
                "timeZone" : "UTC"
              }
            }, {
              "Double" : {
                "name" : "takefirst(takefirst(NewDouble))",
                "allowNaN" : false,
                "allowInfinite" : false
              }
            }, {
              "Integer" : {
                "name" : "takefirst(takefirst(NewInt))"
              }
            }, {
              "Long" : {
                "name" : "takefirst(takefirst(Long))"
              }
            }, {
              "Time" : {
                "name" : "takefirst(windowStartTime)",
                "timeZone" : "UTC"
              }
            }, {
              "Time" : {
                "name" : "takefirst(windowEndTime)",
                "timeZone" : "UTC"
              }
            }, {
              "Long" : {
                "name" : "rankColName",
                "minAllowedValue" : 0
              }
            }, {
              "Double" : {
                "name" : "mean(20,rankColName)",
                "allowNaN" : false,
                "allowInfinite" : false
              }
            } ]
          }
        }
      }
    }
  }, {
    "transform" : {
      "IntegerToOneHotTransform" : {
        "columnName" : "someIntColumn",
        "minValue" : 0,
        "maxValue" : 3
      }
    }
  }, {
    "filter" : {
      "ConditionFilter" : {
        "condition" : {
          "SequenceLengthCondition" : {
            "op" : "LessThan",
            "length" : 1
          }
        }
      }
    }
  }, {
    "transform" : {
      "AddConstantColumnTransform" : {
        "newColumnName" : "testColSeq",
        "newColumnType" : "Integer",
        "fixedValue" : {
          "DoubleWritable" : {
            "value" : 0.0
          }
        },
        "inputSchema" : {
          "SequenceSchema" : {
            "columns" : [ {
              "Long" : {
                "name" : "takefirst(count(Cat))",
                "minAllowedValue" : 0
              }
            }, {
              "Double" : {
                "name" : "takefirst(sum(Dbl))",
                "allowNaN" : false,
                "allowInfinite" : false
              }
            }, {
              "Integer" : {
                "name" : "takefirst(takefirst(Cat2[State1]))",
                "minAllowedValue" : 0,
                "maxAllowedValue" : 1
              }
            }, {
              "Integer" : {
                "name" : "takefirst(takefirst(Cat2[State2]))",
                "minAllowedValue" : 0,
                "maxAllowedValue" : 1
              }
            }, {
              "Double" : {
                "name" : "takefirst(takefirst(Dbl2))",
                "maxAllowedValue" : 100.0,
                "allowNaN" : true,
                "allowInfinite" : false
              }
            }, {
              "Integer" : {
                "name" : "takefirst(takefirst(Int))"
              }
            }, {
              "Integer" : {
                "name" : "takefirst(takefirst(Int2))",
                "minAllowedValue" : 0,
                "maxAllowedValue" : 10
              }
            }, {
              "Long" : {
                "name" : "takefirst(takefirst(Long))"
              }
            }, {
              "Long" : {
                "name" : "takefirst(takefirst(Long2))",
                "minAllowedValue" : -100
              }
            }, {
              "Categorical" : {
                "name" : "takefirst(takefirst(StrA))",
                "stateNames" : [ "true", "false" ]
              }
            }, {
              "Categorical" : {
                "name" : "takefirst(takefirst(StrB))",
                "stateNames" : [ "true", "false" ]
              }
            }, {
              "Time" : {
                "name" : "takefirst(takefirst(Str2a))",
                "timeZone" : "UTC"
              }
            }, {
              "String" : {
                "name" : "takefirst(takefirst(Str3))"
              }
            }, {
              "Time" : {
                "name" : "takefirst(takefirst(TimeCol))",
                "timeZone" : "UTC"
              }
            }, {
              "Integer" : {
                "name" : "takefirst(takefirst(Hour))"
              }
            }, {
              "String" : {
                "name" : "takefirst(takefirst(Date))"
              }
            }, {
              "Time" : {
                "name" : "takefirst(TimeCol2)",
                "timeZone" : "UTC"
              }
            }, {
              "Double" : {
                "name" : "takefirst(takefirst(NewDouble))",
                "allowNaN" : false,
                "allowInfinite" : false
              }
            }, {
              "Integer" : {
                "name" : "takefirst(takefirst(NewInt))"
              }
            }, {
              "Long" : {
                "name" : "takefirst(takefirst(Long))"
              }
            }, {
              "Time" : {
                "name" : "takefirst(windowStartTime)",
                "timeZone" : "UTC"
              }
            }, {
              "Time" : {
                "name" : "takefirst(windowEndTime)",
                "timeZone" : "UTC"
              }
            }, {
              "Long" : {
                "name" : "rankColName",
                "minAllowedValue" : 0
              }
            }, {
              "Double" : {
                "name" : "mean(20,rankColName)",
                "allowNaN" : false,
                "allowInfinite" : false
              }
            }, {
              "Integer" : {
                "name" : "someIntColumn[0]",
                "minAllowedValue" : 0,
                "maxAllowedValue" : 1
              }
            }, {
              "Integer" : {
                "name" : "someIntColumn[1]",
                "minAllowedValue" : 0,
                "maxAllowedValue" : 1
              }
            }, {
              "Integer" : {
                "name" : "someIntColumn[2]",
                "minAllowedValue" : 0,
                "maxAllowedValue" : 1
              }
            }, {
              "Integer" : {
                "name" : "someIntColumn[3]",
                "minAllowedValue" : 0,
                "maxAllowedValue" : 1
              }
            } ]
          }
        }
      }
    }
  }, {
    "transform" : {
      "SequenceOffsetTransform" : {
        "columnsToOffset" : [ "testColSeq" ],
        "offsetAmount" : 1,
        "operationType" : "InPlace",
        "edgeHandling" : "TrimSequence"
      }
    }
  }, {
    "transform" : {
      "AddConstantColumnTransform" : {
        "newColumnName" : "someTextCol",
        "newColumnType" : "String",
        "fixedValue" : {
          "Text" : {
            "bytes" : "c29tZSB2YWx1ZXMA",
            "length" : 11
          }
        },
        "inputSchema" : {
          "SequenceSchema" : {
            "columns" : [ {
              "Long" : {
                "name" : "takefirst(count(Cat))",
                "minAllowedValue" : 0
              }
            }, {
              "Double" : {
                "name" : "takefirst(sum(Dbl))",
                "allowNaN" : false,
                "allowInfinite" : false
              }
            }, {
              "Integer" : {
                "name" : "takefirst(takefirst(Cat2[State1]))",
                "minAllowedValue" : 0,
                "maxAllowedValue" : 1
              }
            }, {
              "Integer" : {
                "name" : "takefirst(takefirst(Cat2[State2]))",
                "minAllowedValue" : 0,
                "maxAllowedValue" : 1
              }
            }, {
              "Double" : {
                "name" : "takefirst(takefirst(Dbl2))",
                "maxAllowedValue" : 100.0,
                "allowNaN" : true,
                "allowInfinite" : false
              }
            }, {
              "Integer" : {
                "name" : "takefirst(takefirst(Int))"
              }
            }, {
              "Integer" : {
                "name" : "takefirst(takefirst(Int2))",
                "minAllowedValue" : 0,
                "maxAllowedValue" : 10
              }
            }, {
              "Long" : {
                "name" : "takefirst(takefirst(Long))"
              }
            }, {
              "Long" : {
                "name" : "takefirst(takefirst(Long2))",
                "minAllowedValue" : -100
              }
            }, {
              "Categorical" : {
                "name" : "takefirst(takefirst(StrA))",
                "stateNames" : [ "true", "false" ]
              }
            }, {
              "Categorical" : {
                "name" : "takefirst(takefirst(StrB))",
                "stateNames" : [ "true", "false" ]
              }
            }, {
              "Time" : {
                "name" : "takefirst(takefirst(Str2a))",
                "timeZone" : "UTC"
              }
            }, {
              "String" : {
                "name" : "takefirst(takefirst(Str3))"
              }
            }, {
              "Time" : {
                "name" : "takefirst(takefirst(TimeCol))",
                "timeZone" : "UTC"
              }
            }, {
              "Integer" : {
                "name" : "takefirst(takefirst(Hour))"
              }
            }, {
              "String" : {
                "name" : "takefirst(takefirst(Date))"
              }
            }, {
              "Time" : {
                "name" : "takefirst(TimeCol2)",
                "timeZone" : "UTC"
              }
            }, {
              "Double" : {
                "name" : "takefirst(takefirst(NewDouble))",
                "allowNaN" : false,
                "allowInfinite" : false
              }
            }, {
              "Integer" : {
                "name" : "takefirst(takefirst(NewInt))"
              }
            }, {
              "Long" : {
                "name" : "takefirst(takefirst(Long))"
              }
            }, {
              "Time" : {
                "name" : "takefirst(windowStartTime)",
                "timeZone" : "UTC"
              }
            }, {
              "Time" : {
                "name" : "takefirst(windowEndTime)",
                "timeZone" : "UTC"
              }
            }, {
              "Long" : {
                "name" : "rankColName",
                "minAllowedValue" : 0
              }
            }, {
              "Double" : {
                "name" : "mean(20,rankColName)",
                "allowNaN" : false,
                "allowInfinite" : false
              }
            }, {
              "Integer" : {
                "name" : "someIntColumn[0]",
                "minAllowedValue" : 0,
                "maxAllowedValue" : 1
              }
            }, {
              "Integer" : {
                "name" : "someIntColumn[1]",
                "minAllowedValue" : 0,
                "maxAllowedValue" : 1
              }
            }, {
              "Integer" : {
                "name" : "someIntColumn[2]",
                "minAllowedValue" : 0,
                "maxAllowedValue" : 1
              }
            }, {
              "Integer" : {
                "name" : "someIntColumn[3]",
                "minAllowedValue" : 0,
                "maxAllowedValue" : 1
              }
            } ]
          }
        }
      }
    }
  } ]
}